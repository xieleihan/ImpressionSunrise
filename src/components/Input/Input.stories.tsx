import type { Meta, StoryObj } from '@storybook/react-vite';
import { Input } from './Input';

const meta = {
    title: 'Components/Input',
    component: Input,
    parameters: {
        layout: 'centered',
    },
    tags: ['autodocs'],
    argTypes: {
        size: {
            control: { type: 'select' },
            options: ['small', 'middle', 'large'],
        },
        status: {
            control: { type: 'select' },
            options: ['error', 'warning', undefined],
        },
        disabled: {
            control: { type: 'boolean' },
        },
        bordered: {
            control: { type: 'boolean' },
        },
        allowClear: {
            control: { type: 'boolean' },
        },
        showCount: {
            control: { type: 'boolean' },
        },
        maxLength: {
            control: { type: 'number' },
        },
    },
} satisfies Meta<typeof Input>;

export default meta;
type Story = StoryObj<typeof meta>;

// Âü∫Á°ÄËæìÂÖ•Ê°Ü
export const Default: Story = {
    args: {
        placeholder: 'ËØ∑ËæìÂÖ•ÂÜÖÂÆπ',
        size: 'middle',
    },
};

// ‰∏çÂêåÂ§ßÂ∞è
export const Sizes: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '16px', width: '300px' }}>
            <Input placeholder="Small size" size="small" />
            <Input placeholder="Middle size (default)" size="middle" />
            <Input placeholder="Large size" size="large" />
        </div>
    ),
};

// Â∏¶ÂâçÁºÄÂêéÁºÄ
export const WithPrefixSuffix: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '16px', width: '300px' }}>
            <Input
                placeholder="ËØ∑ËæìÂÖ•ÁΩëÂùÄ"
                prefix={<span>üåê</span>}
            />
            <Input
                placeholder="ËØ∑ËæìÂÖ•ÈÇÆÁÆ±"
                suffix={<span>@gmail.com</span>}
            />
            <Input
                placeholder="ÊêúÁ¥¢"
                prefix={<span>üîç</span>}
                suffix={<span>‚åòK</span>}
            />
        </div>
    ),
};

// Â∏¶ÂâçÁΩÆÂêéÁΩÆÊ†áÁ≠æ
export const WithAddons: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '16px', width: '400px' }}>
            <Input
                placeholder="ËØ∑ËæìÂÖ•ÁΩëÂùÄ"
                addonBefore="https://"
                addonAfter=".com"
            />
            <Input
                placeholder="ËØ∑ËæìÂÖ•ÈáëÈ¢ù"
                addonBefore="¬•"
                addonAfter="ÂÖÉ"
            />
        </div>
    ),
};

// Ê∏ÖÈô§ÂäüËÉΩ
export const AllowClear: Story = {
    args: {
        placeholder: 'ÂèØÊ∏ÖÈô§ÁöÑËæìÂÖ•Ê°Ü',
        allowClear: true,
        defaultValue: 'ËøôÊòØ‰∏Ä‰∫õÊñáÊú¨',
    },
};

// Â≠óÊï∞ÁªüËÆ°
export const ShowCount: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '16px', width: '300px' }}>
            <Input
                placeholder="ÊòæÁ§∫Â≠óÊï∞"
                showCount
                defaultValue="Hello World"
            />
            <Input
                placeholder="ÈôêÂà∂ÊúÄÂ§ßÈïøÂ∫¶"
                showCount
                maxLength={50}
                defaultValue="ÈôêÂà∂50‰∏™Â≠óÁ¨¶"
            />
        </div>
    ),
};

// Áä∂ÊÄÅ
export const Status: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '16px', width: '300px' }}>
            <Input placeholder="Ê≠£Â∏∏Áä∂ÊÄÅ" />
            <Input placeholder="Ë≠¶ÂëäÁä∂ÊÄÅ" status="warning" />
            <Input placeholder="ÈîôËØØÁä∂ÊÄÅ" status="error" />
            <Input placeholder="Á¶ÅÁî®Áä∂ÊÄÅ" disabled defaultValue="Á¶ÅÁî®ÁöÑËæìÂÖ•Ê°Ü" />
        </div>
    ),
};

// Êó†ËæπÊ°Ü
export const Borderless: Story = {
    render: () => (
        <div style={{
            display: 'flex', flexDirection: 'column', gap: '16px', width: '300px',
            backgroundColor: '#f5f5f5', padding: '20px', borderRadius: '8px'
        }}>
            <Input placeholder="ÊúâËæπÊ°ÜÔºàÈªòËÆ§Ôºâ" bordered />
            <Input placeholder="Êó†ËæπÊ°Ü" bordered={false} />
        </div>
    ),
};

// ÂØÜÁ†ÅËæìÂÖ•Ê°Ü
export const Password: Story = {
    args: {
        type: 'password',
        placeholder: 'ËØ∑ËæìÂÖ•ÂØÜÁ†Å',
        allowClear: true,
    },
};

// Êï∞Â≠óËæìÂÖ•Ê°Ü
export const Number: Story = {
    args: {
        type: 'number',
        placeholder: 'ËØ∑ËæìÂÖ•Êï∞Â≠ó',
        min: 0,
        max: 100,
    },
};

// ÊêúÁ¥¢Ê°Ü
export const Search: Story = {
    render: () => (
        <div style={{ width: '300px' }}>
            <Input
                placeholder="ÊêúÁ¥¢..."
                prefix={<span>üîç</span>}
                allowClear
                onPressEnter={(e) => {
                    console.log('Search:', (e.target as HTMLInputElement).value);
                }}
            />
        </div>
    ),
};
